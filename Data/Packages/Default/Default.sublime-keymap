[
// BASICS OPERATIONS

	// NAVIGATION
	{ "keys": ["left"], "command": "move", "args": {"by": "characters", "forward": false} },
	{ "keys": ["right"], "command": "move", "args": {"by": "characters", "forward": true} },
	{ "keys": ["up"], "command": "move", "args": {"by": "lines", "forward": false} },
	{ "keys": ["down"], "command": "move", "args": {"by": "lines", "forward": true} },
	{ "keys": ["shift+left"], "command": "move", "args": {"by": "characters", "forward": false, "extend": true} },
	{ "keys": ["shift+right"], "command": "move", "args": {"by": "characters", "forward": true, "extend": true} },
	{ "keys": ["shift+up"], "command": "move", "args": {"by": "lines", "forward": false, "extend": true} },
	{ "keys": ["shift+down"], "command": "move", "args": {"by": "lines", "forward": true, "extend": true} },
	{ "keys": ["ctrl+left"], "command": "move", "args": {"by": "words", "forward": false} },
	{ "keys": ["ctrl+right"], "command": "move", "args": {"by": "word_ends", "forward": true} },
	{ "keys": ["pageup"], "command": "move", "args": {"by": "pages", "forward": false} },
	{ "keys": ["pagedown"], "command": "move", "args": {"by": "pages", "forward": true} },
	{ "keys": ["home"], "command": "move_to", "args": {"to": "bol", "extend": false} },
	{ "keys": ["end"], "command": "move_to", "args": {"to": "eol", "extend": false} },
	{ "keys": ["ctrl+home"], "command": "move_to", "args": {"to": "bof", "extend": false} },
	{ "keys": ["ctrl+end"], "command": "move_to", "args": {"to": "eof", "extend": false} },

	// SELECTIONS
	{ "keys": ["ctrl+shift+left"], "command": "move", "args": {"by": "words", "forward": false, "extend": true} },
	{ "keys": ["ctrl+shift+right"], "command": "move", "args": {"by": "word_ends", "forward": true, "extend": true} },
	{ "keys": ["shift+home"], "command": "move_to", "args": {"to": "bol", "extend": true} },
	{ "keys": ["shift+end"], "command": "move_to", "args": {"to": "eol", "extend": true} },
	{ "keys": ["ctrl+shift+home"], "command": "move_to", "args": {"to": "bof", "extend": true} },
	{ "keys": ["ctrl+shift+end"], "command": "move_to", "args": {"to": "eof", "extend": true} },
	{ "keys": ["shift+pageup"], "command": "move", "args": {"by": "pages", "forward": false, "extend": true} },
	{ "keys": ["shift+pagedown"], "command": "move", "args": {"by": "pages", "forward": true, "extend": true} },
	{ "keys": ["ctrl+a"], "command": "select_all" },

// CHAR MODIFICATION
	{ "keys": ["backspace"], "command": "left_delete" },
	{ "keys": ["shift+backspace"], "command": "left_delete" },
	{ "keys": ["ctrl+backspace"], "command": "delete_word", "args": { "forward": false } },

	{ "keys": ["delete"], "command": "right_delete" },
	{ "keys": ["enter"], "command": "insert", "args": {"characters": "\n"} },
	{ "keys": ["ctrl+z"], "command": "undo" },
	{ "keys": ["ctrl+shift+z"], "command": "redo" },
	{ "keys": ["ctrl+c"], "command": "copy" },
	{ "keys": ["ctrl+v"], "command": "paste" },

	{ "keys": ["alt+s"], "command": "save" },
	{ "keys": ["ctrl+p"], "command": "show_overlay", "args": {"overlay": "goto", "show_files": true} },
	{ "keys": ["ctrl+shift+p"], "command": "show_overlay", "args": {"overlay": "command_palette"} },
	{ "keys": ["ctrl+/"], "command": "toggle_comment", "args": { "block": false } },
	{ "keys": ["ctrl+shift+/"], "command": "toggle_comment", "args": { "block": true } },
	{ "keys": ["ctrl+`"], "command": "show_panel", "args": {"panel": "console", "toggle": true} },

// Extended functionality
	{ "keys": ["ctrl+alt+up"], "command": "select_lines", "args": {"forward": false} },
	{ "keys": ["ctrl+alt+down"], "command": "select_lines", "args": {"forward": true} },
	//{ "keys": ["alt+`"], "command": "toggle_side_bar" },
	{ "keys": ["shift+f11"], "command": "toggle_distraction_free" },
	{ "keys": ["ctrl+k", "ctrl+v"], "command": "paste_from_history" },
	{ "keys": ["alt+up"], "command": "scroll_lines", "args": {"amount": 10.0 } },
	{ "keys": ["alt+down"], "command": "scroll_lines", "args": {"amount": -10.0 } },
	{ "keys": ["ctrl+tab"], "command": "next_view_in_stack" },
	{ "keys": ["ctrl+shift+l"], "command": "split_selection_into_lines" },
	
	{ "keys": ["ctrl+shift+m"], "command": "expand_selection", "args": {"to": "brackets"} },
	{ "keys": ["ctrl+m"], "command": "move_to", "args": {"to": "brackets"} },
	{ "keys": ["ctrl+g"], "command": "show_overlay", "args": {"overlay": "goto", "text": ":"} },
	{ "keys": ["ctrl+k", "ctrl+/"], "command": "toggle_inline_diff" },	
	{ "keys": ["ctrl+shift+up"], "command": "swap_line_up" },
	{ "keys": ["ctrl+shift+down"], "command": "swap_line_down" },
	{ "keys": ["ctrl+shift+d"], "command": "duplicate_line" },
	{ "keys": ["ctrl+shift+["], "command": "fold" },
	{ "keys": ["ctrl+shift+]"], "command": "unfold" },

	{ "keys": ["alt+w"], "command": "focus_neighboring_group", "args": {"forward": false} },
	{ "keys": ["context_menu", "right"], "command": "move_to_neighboring_group", "args": {"forward": false} },
	{ "keys": ["context_menu", "left"], "command": "move_to_neighboring_group" },
	//  { "keys": ["ctrl+space"], "command": "auto_complete" },
	//	{ "keys": ["ctrl+j"], "command": "join_lines" },
	//	{ "keys": ["ctrl+alt+shift+p"], "command": "show_scope_name" },

	//TESTS
 

// EMACS PRO ESSENTIALS
	
	{"keys": ["ctrl+up"], "command": "sbp_move_to_paragraph", "args": {"direction": -1},
        "context": [ {"key": "sbp_use_alt_bindings"}]
    },
    {"keys": ["ctrl+down"], "command": "sbp_move_to_paragraph", "args": {"direction": 1},
        "context": [ {"key": "sbp_use_alt_bindings"}]
    },

    {"keys": ["ctrl+b", "Z"], "command": "sbp_zap_to_string", "args": {"include_string": false}},
    {"keys": ["ctrl+b", "j", "S"], "command": "sbp_jump_to_string", "args": {"include_string": false}},

    {"keys": ["ctrl+b", "P"], "command": "sbp_toggle_view_pinned"},
    {"keys": ["ctrl+b", "k"], "command": "sbp_close_current_view"},

// MARK handling
    {"keys": ["ctrl+space"], "command": "sbp_set_mark"},
    {"keys": ["ctrl+b", "ctrl+x"], "command": "sbp_swap_point_and_mark"},
    {"keys": ["ctrl+o"], "command": "sbp_swap_point_and_mark", "args": {"toggle_active_mark_mode": true}},
    {"keys": ["ctrl+x"], "command": "sbp_kill_region"},
    {"keys": ["ctrl+v"], "command": "sbp_yank"},
    {"keys": ["ctrl+b", "ctrl+y"], "command": "sbp_choose_and_yank"}, //history check with normal buttons
    //control+c
    {"keys": ["ctrl+c"], "command": "sbp_kill_region", "args": {"is_copy": true}, "context": [ {"key": "sbp_use_alt_bindings"}]},
    // yank from history
    {"keys": ["alt+v"], "command": "sbp_yank", "args": {"pop": 1}, "context": [ {"key": "sbp_use_alt_bindings"}]},
    // change to context
    {"keys": ["ctrl+b", "2"], "command": "sbp_pane_cmd", "args": {"cmd": "split", "stype": "h"}},
    {"keys": ["ctrl+b", "3"], "command": "sbp_pane_cmd", "args": {"cmd": "split", "stype": "v"}},
    

    {"keys": ["tab"], "command": "sbp_tab_cmd",  "context": [
        {"key": "panel_has_focus",  "operand": false },
        {"key": "auto_complete_visible", "operand": false },
        {"key": "has_next_field", "operand": false },
        {"key": "overlay_visible", "operand": false },
        {"key": "setting.tab_completion", "operator": "equal", "operand": false },
        {"key": "selector", "operator": "equal", "operand": "source" }]
    },

   // i-search
    // Integration with default find and replace from sublime
    {"keys": ["super+r"], "command": "show_panel", "args": {"panel": "replace"} , "context": [ {"key": "sbp_use_super_bindings"}]},
    {"keys": ["ctrl+s"], "command": "sbp_inc_search", "args": {"forward": true, "regex": false}},
    {"keys": ["ctrl+r"], "command": "sbp_inc_search", "args": {"forward": false, "regex": false}},
    {"keys": ["ctrl+w"], "command": "sbp_inc_search", "args": {"cmd": "append_from_cursor"},
        "context": [ {"key": "i_search_active"}, {"key": "panel_has_focus"} ]
    },
    {"keys": ["alt+d"], "command": "sbp_inc_search", "args": {"cmd": "next", "keep": true},
        "context": [ {"key": "i_search_active"}, {"key": "panel_has_focus"}, {"key": "sbp_use_alt_bindings"}]
    },
    {"keys": ["ctrl+s"], "command": "sbp_inc_search", "args": {"cmd": "next", "keep": false, "forward": true},
        "context": [ {"key": "i_search_active"}, {"key": "panel_has_focus"} ]
    },
    {"keys": ["ctrl+r"], "command": "sbp_inc_search", "args": {"cmd": "next", "keep": false, "forward": false},
        "context": [ {"key": "i_search_active"}, {"key": "panel_has_focus"} ]
    },
    {"keys": ["backspace"], "command": "sbp_inc_search", "args": {"cmd": "pop_group"},
        "context": [ {"key": "i_search_active"}, {"key": "panel_has_focus"} ]
    },
    {"keys": ["alt+a"], "command": "sbp_inc_search", "args": {"cmd": "keep_all"},
        "context": [ {"key": "i_search_active"}, {"key": "panel_has_focus"}, {"key": "sbp_use_alt_bindings"} ]
    },
    {"keys": ["escape"], "command": "sbp_inc_search", "args": {"cmd": "done"},
        "context": [ {"key": "i_search_active"}, {"key": "panel_has_focus"} ]
    },
    { "keys": ["ctrl+c"], "command": "sbp_inc_search", "args": {"cmd": "copy"},
        "context": [ {"key": "i_search_active"}, {"key": "panel_has_focus"} ]
    },
    { "keys": ["ctrl+x"], "command": "sbp_inc_search", "args": {"cmd": "sbp_kill_region"},
        "context": [ {"key": "i_search_active"}, {"key": "panel_has_focus"} ]
    },
    { "keys": ["up"], "command": "sbp_inc_search", "args": {"cmd": "history", "dir": -1},
        "context": [ {"key": "i_search_active"}, {"key": "panel_has_focus"} ]
    },
    { "keys": ["down"], "command": "sbp_inc_search", "args": {"cmd": "history", "dir": 1},
        "context": [ {"key": "i_search_active"}, {"key": "panel_has_focus"} ]
    },


 	// MAYBE
 	// move by blocks
	{"keys": ["alt+]"], "command": "sbp_move_sexpr", "args": {"direction": 1}, "context": [ {"key": "sbp_use_alt_bindings"}]},
	{"keys": ["alt+["], "command": "sbp_move_sexpr", "args": {"direction": -1}, "context": [ {"key": "sbp_use_alt_bindings"}]},
	//move to eof/bof with mark from cursor
	{"keys": ["alt+shift+."], "command": "sbp_move_to", "args": {"to": "eof"}, "context": [ {"key": "sbp_use_alt_bindings"}]},
    {"keys": ["alt+shift+,"], "command": "sbp_move_to", "args": {"to": "bof"}, "context": [ {"key": "sbp_use_alt_bindings"}]},

// EMACS PRO ESSENTIALS END

	{ "keys": ["ctrl+q"], "command": "toggle_record_macro" },
	{ "keys": ["ctrl+shift+q"], "command": "run_macro" },
	{ "keys": ["ctrl+delete"], "command": "delete_word", "args": { "forward": true } },
	{ "keys": ["ctrl+shift+backspace"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Delete to Hard BOL.sublime-macro"} },
	{ "keys": ["ctrl+shift+delete"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Delete to Hard EOL.sublime-macro"} },

// FIND -- could be duplicated with EMACS plugin

	{ "keys": ["ctrl+d"], "command": "find_under_expand" },
	{ "keys": ["ctrl+f"], "command": "show_panel", "args": {"panel": "find", "reverse": false} },
	{ "keys": ["alt+r"], "command": "show_panel", "args": {"panel": "replace", "reverse": false} },

	// Find panel key bindings
	{ "keys": ["enter"], "command": "find_next", "context":
		[{"key": "panel", "operand": "find"}, {"key": "panel_has_focus"}]
	},
	{ "keys": ["shift+enter"], "command": "find_prev", "context":
		[{"key": "panel", "operand": "find"}, {"key": "panel_has_focus"}]
	},
	{ "keys": ["alt+enter"], "command": "find_all", "args": {"close_panel": true},
		 "context": [{"key": "panel", "operand": "find"}, {"key": "panel_has_focus"}]
	},

	// Replace panel key bindings
	{ "keys": ["enter"], "command": "find_next", "context":
		[{"key": "panel", "operand": "replace"}, {"key": "panel_has_focus"}]
	},
	{ "keys": ["shift+enter"], "command": "find_prev", "context":
		[{"key": "panel", "operand": "replace"}, {"key": "panel_has_focus"}]
	},
	{ "keys": ["alt+enter"], "command": "find_all", "args": {"close_panel": true},
		"context": [{"key": "panel", "operand": "replace"}, {"key": "panel_has_focus"}]
	},
	{ "keys": ["ctrl+alt+enter"], "command": "replace_all", "args": {"close_panel": true},
		 "context": [{"key": "panel", "operand": "replace"}, {"key": "panel_has_focus"}]
	},

	// Incremental find panel key bindings
	{ "keys": ["enter"], "command": "hide_panel", "context":
		[{"key": "panel", "operand": "incremental_find"}, {"key": "panel_has_focus"}]
	},
	{ "keys": ["shift+enter"], "command": "find_prev", "context":
		[{"key": "panel", "operand": "incremental_find"}, {"key": "panel_has_focus"}]
	},
	{ "keys": ["alt+enter"], "command": "find_all", "args": {"close_panel": true},
		"context": [{"key": "panel", "operand": "incremental_find"}, {"key": "panel_has_focus"}]
	},


	// Find in Files panel key bindings
	{ "keys": ["alt+enter"], "command": "find_all",
		 "context": [{"key": "panel", "operand": "find_in_files"}, {"key": "panel_has_focus"}]
	},
	{ "keys": ["ctrl+alt+enter"], "command": "replace_all",
		 "context": [{"key": "panel", "operand": "find_in_files"}, {"key": "panel_has_focus"}]
	},


	{ "keys": ["ctrl+]"], "command": "indent" },
	{ "keys": ["ctrl+["], "command": "unindent" },

// could be duplicate with EMACS

	{ "keys": ["tab"], "command": "insert_best_completion", "args": {"default": "\t", "exact": true} },
	{ "keys": ["tab"], "command": "insert_best_completion", "args": {"default": "\t", "exact": false},
		"context":
		[
			{ "key": "setting.tab_completion", "operator": "equal", "operand": true },
			{ "key": "preceding_text", "operator": "not_regex_match", "operand": ".*\\b[0-9]+$", "match_all": true },
		]
	},
	{ "keys": ["tab"], "command": "replace_completion_with_next_completion", "context":
		[
			{ "key": "last_command", "operator": "equal", "operand": "insert_best_completion" },
			{ "key": "setting.tab_completion", "operator": "equal", "operand": true }
		]
	},
	{ "keys": ["tab"], "command": "reindent", "context":
		[
			{ "key": "setting.auto_indent", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "preceding_text", "operator": "regex_match", "operand": "^$", "match_all": true },
			{ "key": "following_text", "operator": "regex_match", "operand": "^$", "match_all": true }
		]
	},
	{ "keys": ["tab"], "command": "indent", "context":
		[
			{ "key": "text", "operator": "regex_contains", "operand": "\n" }
		]
	},
	{ "keys": ["tab"], "command": "next_field", "context":
		[
			{ "key": "has_next_field", "operator": "equal", "operand": true }
		]
	},
	{ "keys": ["tab"], "command": "commit_completion", "context":
		[
			{ "key": "auto_complete_visible" },
			{ "key": "setting.auto_complete_commit_on_tab" }
		]
	},


	{ "keys": ["shift+tab"], "command": "insert", "args": {"characters": "\t"} },
	{ "keys": ["shift+tab"], "command": "unindent", "context":
		[
			{ "key": "setting.shift_tab_unindent", "operator": "equal", "operand": true }
		]
	},
	{ "keys": ["shift+tab"], "command": "unindent", "context":
		[
			{ "key": "preceding_text", "operator": "regex_match", "operand": "^[\t ]*" }
		]
	},
	{ "keys": ["shift+tab"], "command": "unindent", "context":
		[
			{ "key": "text", "operator": "regex_contains", "operand": "\n" }
		]
	},
	{ "keys": ["shift+tab"], "command": "prev_field", "context":
		[
			{ "key": "has_prev_field", "operator": "equal", "operand": true }
		]
	},


	{ "keys": ["enter"], "command": "commit_completion", "context":
		[
			{ "key": "auto_complete_visible" },
			{ "key": "setting.auto_complete_commit_on_tab", "operand": false }
		]
	},

// EMACS PRO ESSENTIALS

	    {"keys": ["escape"], "command": "sbp_quit", "args": {"favor_side": "start"},
        "context": [
            { "key": "sbp_catchall"},

            // inverse of all the "escape" key things found in Default plugin and elsewhere
            { "key": "num_selections", "operator": "equal", "operand": 1 },
            { "key": "has_next_field", "operator": "equal", "operand": false },
            { "key": "has_prev_field", "operator": "equal", "operand": false },
            { "key": "panel_visible", "operator": "equal", "operand": false },
            { "key": "overlay_visible", "operator": "equal", "operand": false },
            { "key": "auto_complete_visible", "operator": "equal", "operand": false },
        ]
    },


// STANDARD

	{ "keys": ["escape"], "command": "single_selection", "context":
		[
			{ "key": "num_selections", "operator": "not_equal", "operand": 1 }
		]
	},
	{ "keys": ["escape"], "command": "clear_fields", "context":
		[
			{ "key": "has_next_field", "operator": "equal", "operand": true }
		]
	},
	{ "keys": ["escape"], "command": "clear_fields", "context":
		[
			{ "key": "has_prev_field", "operator": "equal", "operand": true }
		]
	},
	{ "keys": ["escape"], "command": "hide_panel", "args": {"cancel": true},
		"context":
		[
			{ "key": "panel_visible", "operator": "equal", "operand": true }
		]
	},
	{ "keys": ["escape"], "command": "hide_overlay", "context":
		[
			{ "key": "overlay_visible", "operator": "equal", "operand": true }
		]
	},
	{ "keys": ["escape"], "command": "hide_popup", "context":
		[
			{ "key": "popup_visible", "operator": "equal", "operand": true }
		]
	},
	{ "keys": ["escape"], "command": "hide_auto_complete", "context":
		[
			{ "key": "auto_complete_visible", "operator": "equal", "operand": true }
		]
	},


// BRACKETS Handling

	// Auto-pair quotes
	{ "keys": ["\""], "command": "insert_snippet", "args": {"contents": "\"$0\""}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\)|]|\\}|>|$)", "match_all": true },
			{ "key": "preceding_text", "operator": "not_regex_contains", "operand": "[\"a-zA-Z0-9_]$", "match_all": true },
			{ "key": "eol_selector", "operator": "not_equal", "operand": "string.quoted.double - punctuation.definition.string.end", "match_all": true }
		]
	},
	{ "keys": ["\""], "command": "insert_snippet", "args": {"contents": "\"${0:$SELECTION}\""}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true }
		]
	},
	{ "keys": ["\""], "command": "move", "args": {"by": "characters", "forward": true}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^\"", "match_all": true },
			{ "key": "selector", "operator": "not_equal", "operand": "punctuation.definition.string.begin", "match_all": true },
			{ "key": "eol_selector", "operator": "not_equal", "operand": "string.quoted.double - punctuation.definition.string.end", "match_all": true },
		]
	},
	{ "keys": ["backspace"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Delete Left Right.sublime-macro"}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "preceding_text", "operator": "regex_contains", "operand": "\"$", "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^\"", "match_all": true },
			{ "key": "selector", "operator": "not_equal", "operand": "punctuation.definition.string.begin", "match_all": true },
			{ "key": "eol_selector", "operator": "not_equal", "operand": "string.quoted.double - punctuation.definition.string.end", "match_all": true },
		]
	},

// Auto-pair single quotes
	{ "keys": ["'"], "command": "insert_snippet", "args": {"contents": "'$0'"}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\)|]|\\}|>|$)", "match_all": true },
			{ "key": "preceding_text", "operator": "not_regex_contains", "operand": "['a-zA-Z0-9_]$", "match_all": true },
			{ "key": "eol_selector", "operator": "not_equal", "operand": "string.quoted.single - punctuation.definition.string.end", "match_all": true }
		]
	},
	{ "keys": ["'"], "command": "insert_snippet", "args": {"contents": "'${0:$SELECTION}'"}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true }
		]
	},
	{ "keys": ["'"], "command": "move", "args": {"by": "characters", "forward": true}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^'", "match_all": true },
			{ "key": "selector", "operator": "not_equal", "operand": "punctuation.definition.string.begin", "match_all": true },
			{ "key": "eol_selector", "operator": "not_equal", "operand": "string.quoted.single - punctuation.definition.string.end", "match_all": true },
		]
	},
	{ "keys": ["backspace"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Delete Left Right.sublime-macro"}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "preceding_text", "operator": "regex_contains", "operand": "'$", "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^'", "match_all": true },
			{ "key": "selector", "operator": "not_equal", "operand": "punctuation.definition.string.begin", "match_all": true },
			{ "key": "eol_selector", "operator": "not_equal", "operand": "string.quoted.single - punctuation.definition.string.end", "match_all": true },
		]
	},

// Auto-pair brackets
	{ "keys": ["("], "command": "insert_snippet", "args": {"contents": "($0)"}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\)|]|;|\\}|$)", "match_all": true }
		]
	},
	{ "keys": ["("], "command": "insert_snippet", "args": {"contents": "(${0:$SELECTION})"}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true }
		]
	},
	{ "keys": [")"], "command": "move", "args": {"by": "characters", "forward": true}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^\\)", "match_all": true }
		]
	},
	{ "keys": ["backspace"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Delete Left Right.sublime-macro"}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "preceding_text", "operator": "regex_contains", "operand": "\\($", "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^\\)", "match_all": true }
		]
	},

	// Auto-pair square brackets
	{ "keys": ["["], "command": "insert_snippet", "args": {"contents": "[$0]"}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\)|]|;|\\}|$)", "match_all": true }
		]
	},
	{ "keys": ["["], "command": "insert_snippet", "args": {"contents": "[${0:$SELECTION}]"}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true }
		]
	},
	{ "keys": ["]"], "command": "move", "args": {"by": "characters", "forward": true}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^\\]", "match_all": true }
		]
	},
	{ "keys": ["backspace"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Delete Left Right.sublime-macro"}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "preceding_text", "operator": "regex_contains", "operand": "\\[$", "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^\\]", "match_all": true }
		]
	},

	// Auto-pair curly brackets
	{ "keys": ["{"], "command": "insert_snippet", "args": {"contents": "{$0}"}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\)|]|\\}|$)", "match_all": true }
		]
	},
	{ "keys": ["{"], "command": "wrap_block", "args": {"begin": "{", "end": "}"}, "context":
		[
			{ "key": "indented_block", "match_all": true },
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "following_text", "operator": "regex_match", "operand": "^$", "match_all": true },
		]
	},
	{ "keys": ["{"], "command": "insert_snippet", "args": {"contents": "{${0:$SELECTION}}"}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true }
		]
	},
	{ "keys": ["}"], "command": "move", "args": {"by": "characters", "forward": true}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^\\}", "match_all": true }
		]
	},
	{ "keys": ["backspace"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Delete Left Right.sublime-macro"}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "preceding_text", "operator": "regex_contains", "operand": "\\{$", "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^\\}", "match_all": true }
		]
	},

	{ "keys": ["enter"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Add Line in Braces.sublime-macro"}, "context":
		[
			{ "key": "setting.auto_indent", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "preceding_text", "operator": "regex_contains", "operand": "\\{$", "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^\\}", "match_all": true }
		]
	},
	{ "keys": ["shift+enter"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Add Line in Braces.sublime-macro"}, "context":
		[
			{ "key": "setting.auto_indent", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "preceding_text", "operator": "regex_contains", "operand": "\\{$", "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^\\}", "match_all": true }
		]
	},

	{ "keys": ["enter"], "command": "auto_indent_tag", "context":
		[
			{ "key": "setting.auto_indent", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "selector", "operator": "equal", "operand": "punctuation.definition.tag.begin", "match_all": true },
			{ "key": "preceding_text", "operator": "regex_contains", "operand": ">$", "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^</", "match_all": true },
		]
	},
	{ "keys": ["shift+enter"], "command": "auto_indent_tag", "context":
		[
			{ "key": "setting.auto_indent", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "selector", "operator": "equal", "operand": "punctuation.definition.tag.begin", "match_all": true },
			{ "key": "preceding_text", "operator": "regex_contains", "operand": ">$", "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^</", "match_all": true },
		]
	},

// TERMINUS

	{ "keys": ["ctrl+t"], "command": "toggle_terminus_panel" },
    { "keys": ["shift+escape"], "command": "show_panel", "args": {"panel": "output.Terminus Build Results"},
        "context": [
            {"key": "terminus_view.exec_panel_exists", "operand": true},
            {"key": "terminus_view.exec_panel_visible", "operand": false}
        ]
    },
    { "keys": ["shift+escape"], "command": "show_panel", "args": {"panel": "output.exec"},
        "context": [
            {"key": "terminus_view.exec_panel_exists", "operand": true},
            {"key": "terminus_view.exec_panel_visible", "operand": true}
        ]
    },

    // Basic keys
    { "keys": ["up"], "command": "terminus_keypress", "args": {"key": "up"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["down"], "command": "terminus_keypress", "args": {"key": "down"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["right"], "command": "terminus_keypress", "args": {"key": "right"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["left"], "command": "terminus_keypress", "args": {"key": "left"}, "context": [{"key": "terminus_view"}] },

    { "keys": ["insert"], "command": "terminus_keypress", "args": {"key": "insert"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["delete"], "command": "terminus_keypress", "args": {"key": "delete"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["pageup"], "command": "terminus_keypress", "args": {"key": "pageup"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["pagedown"], "command": "terminus_keypress", "args": {"key": "pagedown"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["home"], "command": "terminus_keypress", "args": {"key": "home"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["end"], "command": "terminus_keypress", "args": {"key": "end"}, "context": [{"key": "terminus_view"}] },

    { "keys": ["escape"], "command": "terminus_keypress", "args": {"key": "escape"},
        "context": [
            { "key": "terminus_view" },
            { "key": "terminus_view.closed", "operator": "not_equal", "operand": true },
            { "key": "overlay_visible", "operator": "equal", "operand": false },
            { "key": "popup_visible", "operator": "equal", "operand": false }
        ] },
    { "keys": ["tab"], "command": "terminus_keypress", "args": {"key": "tab"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["space"], "command": "terminus_keypress", "args": {"key": "space"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["backspace"], "command": "terminus_keypress", "args": {"key": "backspace"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["enter"], "command": "terminus_keypress", "args": {"key": "enter"}, "context": [{"key": "terminus_view"}] },

    // Basic keys
    { "keys": ["A"], "command": "terminus_keypress", "args": {"key": "A"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["B"], "command": "terminus_keypress", "args": {"key": "B"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["C"], "command": "terminus_keypress", "args": {"key": "C"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["D"], "command": "terminus_keypress", "args": {"key": "D"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["E"], "command": "terminus_keypress", "args": {"key": "E"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["F"], "command": "terminus_keypress", "args": {"key": "F"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["G"], "command": "terminus_keypress", "args": {"key": "G"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["H"], "command": "terminus_keypress", "args": {"key": "H"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["I"], "command": "terminus_keypress", "args": {"key": "I"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["J"], "command": "terminus_keypress", "args": {"key": "J"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["K"], "command": "terminus_keypress", "args": {"key": "K"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["L"], "command": "terminus_keypress", "args": {"key": "L"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["M"], "command": "terminus_keypress", "args": {"key": "M"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["N"], "command": "terminus_keypress", "args": {"key": "N"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["O"], "command": "terminus_keypress", "args": {"key": "O"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["P"], "command": "terminus_keypress", "args": {"key": "P"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["Q"], "command": "terminus_keypress", "args": {"key": "Q"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["R"], "command": "terminus_keypress", "args": {"key": "R"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["S"], "command": "terminus_keypress", "args": {"key": "S"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["T"], "command": "terminus_keypress", "args": {"key": "T"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["U"], "command": "terminus_keypress", "args": {"key": "U"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["V"], "command": "terminus_keypress", "args": {"key": "V"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["W"], "command": "terminus_keypress", "args": {"key": "W"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["X"], "command": "terminus_keypress", "args": {"key": "X"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["Y"], "command": "terminus_keypress", "args": {"key": "Y"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["Z"], "command": "terminus_keypress", "args": {"key": "Z"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["a"], "command": "terminus_keypress", "args": {"key": "a"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["b"], "command": "terminus_keypress", "args": {"key": "b"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["c"], "command": "terminus_keypress", "args": {"key": "c"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["d"], "command": "terminus_keypress", "args": {"key": "d"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["e"], "command": "terminus_keypress", "args": {"key": "e"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["f"], "command": "terminus_keypress", "args": {"key": "f"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["g"], "command": "terminus_keypress", "args": {"key": "g"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["h"], "command": "terminus_keypress", "args": {"key": "h"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["i"], "command": "terminus_keypress", "args": {"key": "i"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["j"], "command": "terminus_keypress", "args": {"key": "j"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["k"], "command": "terminus_keypress", "args": {"key": "k"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["l"], "command": "terminus_keypress", "args": {"key": "l"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["m"], "command": "terminus_keypress", "args": {"key": "m"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["n"], "command": "terminus_keypress", "args": {"key": "n"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["o"], "command": "terminus_keypress", "args": {"key": "o"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["p"], "command": "terminus_keypress", "args": {"key": "p"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["q"], "command": "terminus_keypress", "args": {"key": "q"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["r"], "command": "terminus_keypress", "args": {"key": "r"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["s"], "command": "terminus_keypress", "args": {"key": "s"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["t"], "command": "terminus_keypress", "args": {"key": "t"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["u"], "command": "terminus_keypress", "args": {"key": "u"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["v"], "command": "terminus_keypress", "args": {"key": "v"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["w"], "command": "terminus_keypress", "args": {"key": "w"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["x"], "command": "terminus_keypress", "args": {"key": "x"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["y"], "command": "terminus_keypress", "args": {"key": "y"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["z"], "command": "terminus_keypress", "args": {"key": "z"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["["], "command": "terminus_keypress", "args": {"key": "["}, "context": [{"key": "terminus_view"}] },
    { "keys": [" "], "command": "terminus_keypress", "args": {"key": " "}, "context": [{"key": "terminus_view"}] },
    { "keys": ["!"], "command": "terminus_keypress", "args": {"key": "!"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["\""], "command": "terminus_keypress", "args": {"key": "\""}, "context": [{"key": "terminus_view"}] },
    { "keys": ["#"], "command": "terminus_keypress", "args": {"key": "#"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["$"], "command": "terminus_keypress", "args": {"key": "$"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["%"], "command": "terminus_keypress", "args": {"key": "%"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["&"], "command": "terminus_keypress", "args": {"key": "&"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["'"], "command": "terminus_keypress", "args": {"key": "'"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["("], "command": "terminus_keypress", "args": {"key": "("}, "context": [{"key": "terminus_view"}] },
    { "keys": [")"], "command": "terminus_keypress", "args": {"key": ")"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["*"], "command": "terminus_keypress", "args": {"key": "*"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["+"], "command": "terminus_keypress", "args": {"key": "+"}, "context": [{"key": "terminus_view"}] },
    { "keys": [","], "command": "terminus_keypress", "args": {"key": ","}, "context": [{"key": "terminus_view"}] },
    { "keys": ["-"], "command": "terminus_keypress", "args": {"key": "-"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["."], "command": "terminus_keypress", "args": {"key": "."}, "context": [{"key": "terminus_view"}] },
    { "keys": ["/"], "command": "terminus_keypress", "args": {"key": "/"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["0"], "command": "terminus_keypress", "args": {"key": "0"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["1"], "command": "terminus_keypress", "args": {"key": "1"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["2"], "command": "terminus_keypress", "args": {"key": "2"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["3"], "command": "terminus_keypress", "args": {"key": "3"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["4"], "command": "terminus_keypress", "args": {"key": "4"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["5"], "command": "terminus_keypress", "args": {"key": "5"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["6"], "command": "terminus_keypress", "args": {"key": "6"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["7"], "command": "terminus_keypress", "args": {"key": "7"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["8"], "command": "terminus_keypress", "args": {"key": "8"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["9"], "command": "terminus_keypress", "args": {"key": "9"}, "context": [{"key": "terminus_view"}] },
    { "keys": [":"], "command": "terminus_keypress", "args": {"key": ":"}, "context": [{"key": "terminus_view"}] },
    { "keys": [";"], "command": "terminus_keypress", "args": {"key": ";"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["<"], "command": "terminus_keypress", "args": {"key": "<"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["="], "command": "terminus_keypress", "args": {"key": "="}, "context": [{"key": "terminus_view"}] },
    { "keys": [">"], "command": "terminus_keypress", "args": {"key": ">"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["?"], "command": "terminus_keypress", "args": {"key": "?"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["@"], "command": "terminus_keypress", "args": {"key": "@"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["]"], "command": "terminus_keypress", "args": {"key": "]"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["^"], "command": "terminus_keypress", "args": {"key": "^"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["_"], "command": "terminus_keypress", "args": {"key": "_"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["`"], "command": "terminus_keypress", "args": {"key": "`"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["{"], "command": "terminus_keypress", "args": {"key": "{"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["|"], "command": "terminus_keypress", "args": {"key": "|"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["}"], "command": "terminus_keypress", "args": {"key": "}"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["~"], "command": "terminus_keypress", "args": {"key": "~"}, "context": [{"key": "terminus_view"}] },
    { "keys": ["\\"], "command": "terminus_keypress", "args": {"key": "\\"}, "context": [{"key": "terminus_view"}] },

    // Basic ctrl + key combinations. Note that ctrl+k is not enabled by default to avoid shadowing the many shortcuts it is used with,
    { "keys": ["ctrl+a"], "command": "terminus_keypress", "args": {"key": "a", "ctrl": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["ctrl+b"], "command": "terminus_keypress", "args": {"key": "b", "ctrl": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["ctrl+c"], "command": "terminus_keypress", "args": {"key": "c", "ctrl": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["ctrl+d"], "command": "terminus_keypress", "args": {"key": "d", "ctrl": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["ctrl+e"], "command": "terminus_keypress", "args": {"key": "e", "ctrl": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["ctrl+f"], "command": "terminus_keypress", "args": {"key": "f", "ctrl": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["ctrl+g"], "command": "terminus_keypress", "args": {"key": "g", "ctrl": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["ctrl+h"], "command": "terminus_keypress", "args": {"key": "h", "ctrl": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["ctrl+i"], "command": "terminus_keypress", "args": {"key": "i", "ctrl": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["ctrl+j"], "command": "terminus_keypress", "args": {"key": "j", "ctrl": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["ctrl+k"], "command": "terminus_keypress", "args": {"key": "k", "ctrl": true}, "context": [{"key": "terminus_view.key.ctrl+k"}] },
    { "keys": ["ctrl+l"], "command": "terminus_keypress", "args": {"key": "l", "ctrl": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["ctrl+m"], "command": "terminus_keypress", "args": {"key": "m", "ctrl": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["ctrl+n"], "command": "terminus_keypress", "args": {"key": "n", "ctrl": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["ctrl+o"], "command": "terminus_keypress", "args": {"key": "o", "ctrl": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["ctrl+p"], "command": "terminus_keypress", "args": {"key": "p", "ctrl": true}, "context": [{"key": "terminus_view.key.ctrl+p"}] },
    { "keys": ["ctrl+q"], "command": "terminus_keypress", "args": {"key": "q", "ctrl": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["ctrl+r"], "command": "terminus_keypress", "args": {"key": "r", "ctrl": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["ctrl+s"], "command": "terminus_keypress", "args": {"key": "s", "ctrl": true}, "context": [{"key": "terminus_view"}] },
   // { "keys": ["ctrl+t"], "command": "terminus_keypress", "args": {"key": "t", "ctrl": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["ctrl+u"], "command": "terminus_keypress", "args": {"key": "u", "ctrl": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["ctrl+v"], "command": "terminus_keypress", "args": {"key": "v", "ctrl": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["ctrl+w"], "command": "terminus_keypress", "args": {"key": "w", "ctrl": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["ctrl+x"], "command": "terminus_keypress", "args": {"key": "x", "ctrl": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["ctrl+y"], "command": "terminus_keypress", "args": {"key": "y", "ctrl": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["ctrl+z"], "command": "terminus_keypress", "args": {"key": "z", "ctrl": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["ctrl+@"], "command": "terminus_keypress", "args": {"key": "@", "ctrl": true}, "context": [{"key": "terminus_view"}] },
    // { "keys": ["ctrl+`"], "command": "terminus_keypress", "args": {"key": "`", "ctrl": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["ctrl+["], "command": "terminus_keypress", "args": {"key": "[", "ctrl": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["ctrl+{"], "command": "terminus_keypress", "args": {"key": "{", "ctrl": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["ctrl+\\"], "command": "terminus_keypress", "args": {"key": "\\", "ctrl": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["ctrl+|"], "command": "terminus_keypress", "args": {"key": "|", "ctrl": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["ctrl+]"], "command": "terminus_keypress", "args": {"key": "]", "ctrl": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["ctrl+}"], "command": "terminus_keypress", "args": {"key": "}", "ctrl": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["ctrl+^"], "command": "terminus_keypress", "args": {"key": "^", "ctrl": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["ctrl+~"], "command": "terminus_keypress", "args": {"key": "~", "ctrl": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["ctrl+_"], "command": "terminus_keypress", "args": {"key": "_", "ctrl": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["ctrl+?"], "command": "terminus_keypress", "args": {"key": "?", "ctrl": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["ctrl+down"], "command": "terminus_keypress", "args": {"key": "down", "ctrl": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["ctrl+right"], "command": "terminus_keypress", "args": {"key": "right", "ctrl": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["ctrl+up"], "command": "terminus_keypress", "args": {"key": "up", "ctrl": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["ctrl+left"], "command": "terminus_keypress", "args": {"key": "left", "ctrl": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["ctrl+insert"], "command": "terminus_keypress", "args": {"key": "insert", "ctrl": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["ctrl+delete"], "command": "terminus_keypress", "args": {"key": "delete", "ctrl": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["ctrl+pageup"], "command": "terminus_keypress", "args": {"key": "pageup", "ctrl": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["ctrl+pagedown"], "command": "terminus_keypress", "args": {"key": "pagedown", "ctrl": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["ctrl+home"], "command": "terminus_keypress", "args": {"key": "home", "ctrl": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["ctrl+end"], "command": "terminus_keypress", "args": {"key": "end", "ctrl": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["ctrl+delete"], "command": "terminus_keypress", "args": {"key": "delete", "ctrl": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["ctrl+backspace"], "command": "terminus_keypress", "args": {"key": "backspace", "ctrl": true}, "context": [{"key": "terminus_view"}] },

    // Basic alt + key combinations
    { "keys": ["alt+a"], "command": "terminus_keypress", "args": {"key": "a", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+b"], "command": "terminus_keypress", "args": {"key": "b", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+c"], "command": "terminus_keypress", "args": {"key": "c", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+d"], "command": "terminus_keypress", "args": {"key": "d", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+e"], "command": "terminus_keypress", "args": {"key": "e", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+f"], "command": "terminus_keypress", "args": {"key": "f", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+g"], "command": "terminus_keypress", "args": {"key": "g", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+h"], "command": "terminus_keypress", "args": {"key": "h", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+i"], "command": "terminus_keypress", "args": {"key": "i", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+j"], "command": "terminus_keypress", "args": {"key": "j", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+k"], "command": "terminus_keypress", "args": {"key": "k", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+l"], "command": "terminus_keypress", "args": {"key": "l", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+m"], "command": "terminus_keypress", "args": {"key": "m", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+n"], "command": "terminus_keypress", "args": {"key": "n", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+o"], "command": "terminus_keypress", "args": {"key": "o", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+p"], "command": "terminus_keypress", "args": {"key": "p", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+q"], "command": "terminus_keypress", "args": {"key": "q", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+r"], "command": "terminus_keypress", "args": {"key": "r", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+s"], "command": "terminus_keypress", "args": {"key": "s", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+t"], "command": "terminus_keypress", "args": {"key": "t", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+u"], "command": "terminus_keypress", "args": {"key": "u", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+v"], "command": "terminus_keypress", "args": {"key": "v", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+w"], "command": "terminus_keypress", "args": {"key": "w", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+x"], "command": "terminus_keypress", "args": {"key": "x", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+y"], "command": "terminus_keypress", "args": {"key": "y", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+z"], "command": "terminus_keypress", "args": {"key": "z", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+shift+a"], "command": "terminus_keypress", "args": {"key": "A", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+shift+b"], "command": "terminus_keypress", "args": {"key": "B", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+shift+c"], "command": "terminus_keypress", "args": {"key": "C", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+shift+d"], "command": "terminus_keypress", "args": {"key": "D", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+shift+e"], "command": "terminus_keypress", "args": {"key": "E", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+shift+f"], "command": "terminus_keypress", "args": {"key": "F", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+shift+g"], "command": "terminus_keypress", "args": {"key": "G", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+shift+h"], "command": "terminus_keypress", "args": {"key": "H", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+shift+i"], "command": "terminus_keypress", "args": {"key": "I", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+shift+j"], "command": "terminus_keypress", "args": {"key": "J", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+shift+k"], "command": "terminus_keypress", "args": {"key": "K", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+shift+l"], "command": "terminus_keypress", "args": {"key": "L", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+shift+m"], "command": "terminus_keypress", "args": {"key": "M", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+shift+n"], "command": "terminus_keypress", "args": {"key": "N", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+shift+o"], "command": "terminus_keypress", "args": {"key": "O", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+shift+p"], "command": "terminus_keypress", "args": {"key": "P", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+shift+q"], "command": "terminus_keypress", "args": {"key": "Q", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+shift+r"], "command": "terminus_keypress", "args": {"key": "R", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+shift+s"], "command": "terminus_keypress", "args": {"key": "S", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+shift+t"], "command": "terminus_keypress", "args": {"key": "T", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+shift+u"], "command": "terminus_keypress", "args": {"key": "U", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+shift+v"], "command": "terminus_keypress", "args": {"key": "V", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+shift+w"], "command": "terminus_keypress", "args": {"key": "W", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+shift+x"], "command": "terminus_keypress", "args": {"key": "X", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+shift+y"], "command": "terminus_keypress", "args": {"key": "Y", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+shift+z"], "command": "terminus_keypress", "args": {"key": "Z", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+["], "command": "terminus_keypress", "args": {"key": "[", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+ "], "command": "terminus_keypress", "args": {"key": " ", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+!"], "command": "terminus_keypress", "args": {"key": "!", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+\""], "command": "terminus_keypress", "args": {"key": "\"", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+#"], "command": "terminus_keypress", "args": {"key": "#", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+$"], "command": "terminus_keypress", "args": {"key": "$", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+%"], "command": "terminus_keypress", "args": {"key": "%", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+&"], "command": "terminus_keypress", "args": {"key": "&", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+'"], "command": "terminus_keypress", "args": {"key": "'", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+("], "command": "terminus_keypress", "args": {"key": "(", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+)"], "command": "terminus_keypress", "args": {"key": ")", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+*"], "command": "terminus_keypress", "args": {"key": "*", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt++"], "command": "terminus_keypress", "args": {"key": "+", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+,"], "command": "terminus_keypress", "args": {"key": ",", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+-"], "command": "terminus_keypress", "args": {"key": "-", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+."], "command": "terminus_keypress", "args": {"key": ".", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+/"], "command": "terminus_keypress", "args": {"key": "/", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+0"], "command": "terminus_keypress", "args": {"key": "0", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+1"], "command": "terminus_keypress", "args": {"key": "1", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+2"], "command": "terminus_keypress", "args": {"key": "2", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+3"], "command": "terminus_keypress", "args": {"key": "3", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+4"], "command": "terminus_keypress", "args": {"key": "4", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+5"], "command": "terminus_keypress", "args": {"key": "5", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+6"], "command": "terminus_keypress", "args": {"key": "6", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+7"], "command": "terminus_keypress", "args": {"key": "7", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+8"], "command": "terminus_keypress", "args": {"key": "8", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+9"], "command": "terminus_keypress", "args": {"key": "9", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+:"], "command": "terminus_keypress", "args": {"key": ":", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+;"], "command": "terminus_keypress", "args": {"key": ";", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+<"], "command": "terminus_keypress", "args": {"key": "<", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+="], "command": "terminus_keypress", "args": {"key": "=", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+>"], "command": "terminus_keypress", "args": {"key": ">", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+?"], "command": "terminus_keypress", "args": {"key": "?", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+@"], "command": "terminus_keypress", "args": {"key": "@", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+]"], "command": "terminus_keypress", "args": {"key": "]", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+^"], "command": "terminus_keypress", "args": {"key": "^", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+_"], "command": "terminus_keypress", "args": {"key": "_", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+`"], "command": "terminus_keypress", "args": {"key": "`", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+{"], "command": "terminus_keypress", "args": {"key": "{", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+|"], "command": "terminus_keypress", "args": {"key": "|", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+}"], "command": "terminus_keypress", "args": {"key": "}", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+~"], "command": "terminus_keypress", "args": {"key": "~", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+\\"], "command": "terminus_keypress", "args": {"key": "\\", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+down"], "command": "terminus_keypress", "args": {"key": "down", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+right"], "command": "terminus_keypress", "args": {"key": "right", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+up"], "command": "terminus_keypress", "args": {"key": "up", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+left"], "command": "terminus_keypress", "args": {"key": "left", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+delete"], "command": "terminus_keypress", "args": {"key": "delete", "alt": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["alt+backspace"], "command": "terminus_keypress", "args": {"key": "backspace", "alt": true}, "context": [{"key": "terminus_view"}] },

    // Shift keys
    { "keys": ["shift+down"], "command": "terminus_keypress", "args": {"key": "down", "shift": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["shift+right"], "command": "terminus_keypress", "args": {"key": "right", "shift": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["shift+up"], "command": "terminus_keypress", "args": {"key": "up", "shift": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["shift+left"], "command": "terminus_keypress", "args": {"key": "left", "shift": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["shift+insert"], "command": "terminus_keypress", "args": {"key": "insert", "shift": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["shift+delete"], "command": "terminus_keypress", "args": {"key": "delete", "shift": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["shift+pageup"], "command": "terminus_keypress", "args": {"key": "pageup", "shift": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["shift+pagedown"], "command": "terminus_keypress", "args": {"key": "pagedown", "shift": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["shift+home"], "command": "terminus_keypress", "args": {"key": "home", "shift": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["shift+end"], "command": "terminus_keypress", "args": {"key": "end", "shift": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["shift+tab"], "command": "terminus_keypress", "args": {"key": "tab", "shift": true}, "context": [{"key": "terminus_view"}] },
    { "keys": ["shift+backspace"], "command": "terminus_keypress", "args": {"key": "backspace", "shift": true}, "context": [{"key": "terminus_view"}] },


    { "keys": ["ctrl+u"], "command": "terminus_send_string", "args": {"string": "\"${file}\"" }},
	//"command":"terminus_keypress", "args": {"key": "enter"}},
{ "keys": ["ctrl+i"], "command": "example"},





// TBD
/*
//MARK HANDLING
	{ "keys": ["ctrl+k", "ctrl+space"], "command": "set_mark" },
	{ "keys": ["ctrl+k", "ctrl+a"], "command": "select_to_mark" },
	{ "keys": ["ctrl+k", "ctrl+w"], "command": "delete_to_mark" },
	{ "keys": ["ctrl+k", "ctrl+x"], "command": "swap_with_mark" },
	{ "keys": ["ctrl+k", "ctrl+c"], "command": "copy_to_mark" },
	{ "keys": ["ctrl+k", "ctrl+y"], "command": "yank" },
	{ "keys": ["ctrl+k", "ctrl+k"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Delete to Hard EOL.sublime-macro"} },
	{ "keys": ["ctrl+k", "ctrl+backspace"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Delete to Hard BOL.sublime-macro"} },
	{ "keys": ["ctrl+k", "ctrl+g"], "command": "clear_bookmarks", "args": {"name": "mark"} },
	{ "keys": ["ctrl+k", "ctrl+c"], "command": "show_at_center" },


 layout handling
 	{ "keys": ["ctrl+1"], "command": "focus_group", "args": { "group": 0 } },
 	{ "keys": ["ctrl+k", "ctrl+shift+left"], "command": "move_to_neighboring_group", "args": {"forward": false} },


// Dunno
//	{ "keys": ["alt+keypad_minus"], "command": "jump_back" },
//	{ "keys": ["alt+shift+keypad_minus"], "command": "jump_forward" },
	//{ "keys": ["ctrl+e"], "command": "slurp_find_string" }, // ctrl+d + ctrl+f achieves the same thing

*/

/// END
]
